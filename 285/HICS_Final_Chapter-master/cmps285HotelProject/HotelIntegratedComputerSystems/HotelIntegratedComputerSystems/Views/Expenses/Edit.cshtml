@model HotelIntegratedComputerSystems.Models.Admin.ExpensesViewModel
@Scripts.Render("~/Scripts/SuggestionTable.js")
@Scripts.Render("~/Scripts/OneFilterPerColumn.js")
@{
    ViewBag.Title = "Edit";
}

<h2></h2>
<div class="panel panel-primary">
    <div class="panel-heading">
        <h3 class="panel-title">Edit</h3>
    </div>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.CustomerName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CustomerName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BuildingName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BuildingName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BuildingName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FloorNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FloorNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FloorNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RoomNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RoomNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RoomNumber, "", new { @class = "text-danger" })
                <input class="showSuggestions" type="button" data-target="#Modal1" data-toggle="modal" name="ShowBookings" value="Select Booking"/>
            </div>
        </div>
        <div class="modal fade" id="Modal1" role="dialog">
            <div class="modal-dialog">
                <div id="BookingList" class="panel panel-primary">
                    <div class="panel-heading">
                        <h3 class="panel-title">Bookings</h3>
                    </div>
                    <table class="table table-hover table-bordered" id="BookingTable">
                        <thead>
                            <tr>
                                <th>
                                    <input type="text" id="BookingListInput1" onkeyup="filterFunctionColumn4('BookingTable', 'BookingListInput1', 'BookingListInput2', 'BookingListInput3', 'BookingListInput4')" class="form-control" data-action="filter" placeholder="Filter Customer" />
                                </th>
                                <th>
                                    <input type="text" id="BookingListInput2" onkeyup="filterFunctionColumn4('BookingTable', 'BookingListInput1', 'BookingListInput2', 'BookingListInput3', 'BookingListInput4')" class="form-control" data-action="filter" placeholder="Filter Building" />
                                </th>
                                <th>
                                    <input type="text" id="BookingListInput3" onkeyup="filterFunctionColumn4('BookingTable', 'BookingListInput1', 'BookingListInput2', 'BookingListInput3', 'BookingListInput4')" class="form-control" data-action="filter" placeholder="Filter Floor" />
                                </th>
                                <th>
                                    <input type="text" id="BookingListInput4" onkeyup="filterFunctionColumn4('BookingTable', 'BookingListInput1', 'BookingListInput2', 'BookingListInput3', 'BookingListInput4')" class="form-control" data-action="filter" placeholder="Filter Room" />
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.BookingsList)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.CustomerName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.BuildingName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.FloorNumber)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.RoomNumber)
                                    </td>
                                    <td>
                                        <input type="button" data-dismiss="modal" value="Select" class="btn btn-default" onclick="forwardTo4(this.parentElement.parentElement, BookingList, 'CustomerName', 'BuildingName', 'FloorNumber', 'RoomNumber')" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.ExpenseTypeType, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ExpenseTypeType, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ExpenseTypeType, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ExpenseTypeDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ExpenseTypeDescription, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ExpenseTypeDescription, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ExpenseTypeAmmount, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ExpenseTypeAmmount, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ExpenseTypeAmmount, "", new { @class = "text-danger" })
                        <input class="showSuggestions" data-target="#Modal2" data-toggle="modal" type="button" name="ShowExpenseTypes" value="Select Expense Type"/>
                    </div>
                </div>
        <div class="modal fade" id="Modal2" role="dialog" >
                    <div class="modal-dialog">
                        <div id="ExpenseTypeList" class="panel panel-primary">
                            <div class="panel-heading">
                                <h3 class="panel-title">Expense Types</h3>
                            </div>
                            <table class="table table-hover table-bordered" id="ExpenseTypeTable">
                                <thead>
                                    <tr>
                                        <th>
                                            <input type="text" id="BookingListInput1" onkeyup="filterFunctionColumn3('ExpenseTypeTable', 'BookingListInput1', 'BookingListInput2')" class="form-control" data-action="filter" placeholder="Filter Type" />
                                        </th>
                                        <th>
                                            <input type="text" id="BookingListInput2" onkeyup="filterFunctionColumn3('ExpenseTypeTable', 'BookingListInput1', 'BookingListInput2')" class="form-control" data-action="filter" placeholder="Filter Description" />
                                        </th>
                                        <th>
                                            <input type="text" id="BookingListInput2" onkeyup="filterFunctionColumn3('ExpenseTypeTable', 'BookingListInput1', 'BookingListInput2')" class="form-control" data-action="filter" placeholder="Filter Ammount" />
                                        </th>
                                        <th>
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.ExpenseList)
                                    {
                                        <tr>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Type)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Description)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Ammount)
                                            </td>
                                            <td>
                                                <input type="button" data-dismiss="modal" value="Select" class="btn btn-default" onclick="forwardTo3(this.parentElement.parentElement, ExpenseTypeList, 'ExpenseTypeType', 'ExpenseTypeDescription', 'ExpenseTypeAmmount')" />
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
    }

        <div>
            @Html.ActionLink("Back to List", "Index") | <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>

