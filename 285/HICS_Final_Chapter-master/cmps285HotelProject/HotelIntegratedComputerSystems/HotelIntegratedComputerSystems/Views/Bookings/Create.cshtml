@model HotelIntegratedComputerSystems.Models.Employees.BookingViewModel 
@Scripts.Render("~/Scripts/SuggestionTable.js")
@Scripts.Render("~/Scripts/OneFilterPerColumn.js")
@{
    ViewBag.Title = "New Booking";
}

<h2></h2>
<div class="panel panel-primary">
    <div class="panel-heading">
        <h3 class="panel-title">New Booking</h3>
    </div>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div>
            <div class="form-group">
                @Html.LabelFor(model => model.CustomerName, "Customer Name:", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                    @* Line below is what the above helpermethod generates, not sure how get filter to work on the EditorFor helpermethod *@
                    @*<input class="form-control text-box single-line valid" id="myInput" name="CustomerName" type="text" value="" aria-invalid="false" onkeyup="filterFunction1Column()" data-action="filter">*@
                    @Html.ValidationMessageFor(model => model.CustomerName, "", new { @class = "text-danger" })
                    <input class="showSuggestions" data-toggle="modal" data-target="#Modal1" type="button" name="ShowCustomers" value="Select Customer"/>
                </div>
            </div>

            @* Below is editor for customer's ID, hidden so data can be used but field not seen *@
            <div class="form-group" hidden>
                @Html.LabelFor(model => model.CustomerId, "Customer ID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10" onkeyup="filterFunctionColumn()" data-action="filter" placeholder="">
                    @Html.EditorFor(model => model.CustomerId, new { htmlAttributes = new { @class = "form-control", Id = "CustomerId", @readonly = "true" } })
                    @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="modal fade" id="Modal1" role="dialog">
                <div class="modal-dialog">
                    <div id="CustomerList" class="panel panel-primary">
                        <div class="panel-heading">
                            <h3 class="panel-title">Customers</h3>
                        </div>
                        <div class="modal-content">
                            <table class="table table-hover table-bordered" id="CustomerTable">
                                <thead>
                                    <tr>
                                        <th>
                                            <input type="text" id="CustomerListInput1" onkeyup="filterFunctionColumn2('CustomerTable', 'CustomerListInput1', 'CustomerListInput2')"
                                                   class="form-control" data-action="filter" placeholder="Filter Name" />
                                        </th>
                                        <th>
                                            <input type="text" id="CustomerListInput2" onkeyup="filterFunctionColumn2('CustomerTable', 'CustomerListInput1', 'CustomerListInput2')"
                                                   class="form-control" data-action="filter" placeholder="Filter Id" />
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.customers)
                                    {
                                        <tr>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Name)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Id)
                                            </td>
                                            <td>
                                                <input type="button" value="Select" class="btn btn-default" data-dismiss="modal" onclick="forwardTo2(this.parentElement.parentElement, CustomerList, 'CustomerName', 'CustomerId')" />
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.RoomNumber, "RoomNumber", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10" onkeyup="filterFunctionColumn()" data-action="filter" placeholder="">
                    @Html.EditorFor(model => model.RoomNumber, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                    @Html.ValidationMessageFor(model => model.RoomNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BuildingName, "BuildingName", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10" onkeyup="filterFunctionColumn()" data-action="filter" placeholder="">
                    @Html.EditorFor(model => model.BuildingName, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                    @Html.ValidationMessageFor(model => model.BuildingName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FloorNumber, "FloorNumber", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10" onkeyup="filterFunctionColumn()" data-action="filter" placeholder="">
                    @Html.EditorFor(model => model.FloorNumber, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                    @Html.ValidationMessageFor(model => model.FloorNumber, "", new { @class = "text-danger" })
                    <input class="showSuggestions" data-toggle="modal" data-target="#Modal2" type="button" name="ShowRooms" value="Select Room"/>
                </div>
            </div>
            <div class="modal fade" id="Modal2" role="dialog">
                <div class="modal-dialog">
                    <div id="RoomsList" class="panel panel-primary">
                        <div class="panel-heading">
                            <h3 class="panel-title">Rooms</h3>
                        </div>
                        <table class="table table-hover table-bordered" id="RoomTable">
                            <thead>
                                <tr>
                                    <th>
                                        <input type="text" id="RoomsListInput1" onkeyup="filterFunctionColumn3('RoomTable', 'RoomsListInput1', 'RoomsListInput2', 'RoomsListInput3')" class="form-control" data-action="filter" placeholder="Filter Building" />
                                    </th>
                                    <th>
                                        <input type="text" id="RoomsListInput2" onkeyup="filterFunctionColumn3('RoomTable', 'RoomsListInput1', 'RoomsListInput2', 'RoomsListInput3')" class="form-control" data-action="filter" placeholder="Filter Floor" />
                                    </th>
                                    <th>
                                        <input type="text" id="RoomsListInput3" onkeyup="filterFunctionColumn3('RoomTable', 'RoomsListInput1', 'RoomsListInput2', 'RoomsListInput3')" class="form-control" data-action="filter" placeholder="Filter Room" />
                                    </th>
                                    <th>
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.RoomsList)
                                {
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.BuildingName)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.FloorNumber)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.RoomNumber)
                                        </td>
                                        <td>
                                            <input type="button" value="Select" data-dismiss="modal" class="btn btn-default" onclick="forwardTo3(this.parentElement.parentElement, RoomsList, 'BuildingName', 'FloorNumber', 'RoomNumber')" />
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @* type="date" generates the dropdown calendar for input *@
                    @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                    @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger", })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                    @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.VolumeAdults, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.VolumeAdults, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.VolumeAdults, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.VolumeChildren, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.VolumeChildren, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.VolumeChildren, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
    <div>
        @Html.ActionLink("Return To Bookings", "Index")
    </div>
</div>




@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
